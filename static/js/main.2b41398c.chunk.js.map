{"version":3,"sources":["components/funds.jsx","components/form.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["Funds","Component","props","handleAdd","a","addFund","fund_name","fund_manager","fund_manager_id","optionAxios","headers","axios","post","fund","data","funds","state","setState","handleDelete","Url","fund_id","fetch","method","filter","f","handleShow","getFundList","console","log","map","type","onClick","className","fund_inception_date","fund_manager_name","fund_manager_phone","fund_manager_mail_address","fund_manager_birth_date","url","name","manager","managers","handleChange","bind","handleSubmit","get","this","managersX","forEach","item","push","event","preventDefault","includes","noManager","target","value","onSubmit","htmlFor","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b41398c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Form from \"./form\";\nimport { Fragment } from \"react\";\n\nclass Funds extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"http://132.145.210.248:8080/captain/funds\",\n      funds: [],\n      name: \"\",\n      manager: \"\",\n      managers: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentWillMount() {\n    const { data: funds } = await axios.get(\n      \"http://132.145.210.248:8080/captain/funds\"\n    );\n\n    this.setState({ funds });\n\n    const { data: managers } = await axios.get(\n      \"http://132.145.210.248:8080/captain/fund_managers\"\n    );\n\n    const managersX = [];\n    managers.forEach(function(item) {\n      managersX.push(item.fund_manager_id);\n    });\n    this.setState({ managers: managersX });\n  }\n  // axios\n  //   .post(\"http://132.145.210.248:8080/captain/funds\", addFund, optionAxios)\n  //   .then(response => this.setState({ funds: response.funds }));\n  // console.log(this.state.funds);\n\n  handleAdd = async () => {\n    const addFund = {\n      fund_name: \"Fund ABCx\",\n      fund_manager: { fund_manager_id: \"mjones@thefundone.com\" }\n    };\n    var optionAxios = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    const { data: fund } = await axios.post(\n      \"http://132.145.210.248:8080/captain/funds\",\n      addFund,\n      optionAxios\n    );\n\n    const funds = [fund, ...this.state.funds];\n    this.setState({ funds });\n    //console.log(this.state.funds);\n  };\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { name, manager } = this.state;\n\n    if (!this.state.managers.includes(manager))\n      return this.setState({ noManager: true });\n    //     return this.setState({ noManager: true });\n\n    const addFund = {\n      fund_name: name,\n      fund_manager: { fund_manager_id: manager }\n    };\n    var optionAxios = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n\n    const newFund = await axios.post(\n      \"http://132.145.210.248:8080/captain/funds\",\n      addFund,\n      optionAxios\n    );\n  }\n\n  handleChange(event) {\n    this.setState({\n      // Computed property names\n      // keys of the objects are computed dynamically\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleDelete = fund => {\n    var optionAxios = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    };\n    const Url = \"http://132.145.210.248:8080/captain/funds/\" + fund.fund_id;\n\n    fetch(Url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"API-Key\": \"secret\"\n      }\n    });\n\n    const funds = this.state.funds.filter(f => f.fund_id !== fund.fund_id);\n    this.setState({ funds });\n  };\n\n  handleShow = fund => {\n    const funds = this.state.funds.filter(f => f.fund_id == fund.fund_id);\n    this.setState({ funds });\n  };\n\n  getFundList = () => {\n    const funds = this.state.funds;\n    console.log(funds);\n\n    return (\n      <Fragment>\n        {funds.map(fund => (\n          <tr key={fund.fund_id}>\n            <td>\n              <button\n                type=\"button\"\n                onClick={() => this.handleShow(fund)}\n                className=\"btn btn-light btn-sm\"\n              >\n                {fund.fund_id}\n              </button>\n            </td>\n            <td>{fund.fund_name}</td>\n            <td>{fund.fund_inception_date}</td>\n            <td>{fund.fund_manager.fund_manager_id}</td>\n            <td>{fund.fund_manager.fund_manager_name}</td>\n            <td>{fund.fund_manager.fund_manager_phone}</td>\n            <td>{fund.fund_manager.fund_manager_mail_address}</td>\n            <td>{fund.fund_manager.fund_manager_birth_date}</td>\n            <td>\n              <button\n                type=\"button\"\n                onClick={() => this.handleDelete(fund)}\n                className=\"btn btn-danger btn-sm\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))}\n      </Fragment>\n    );\n  };\n\n  render() {\n    const { funds } = this.state;\n\n    return (\n      <Fragment>\n        {this.state.noManager}\n        <form className=\"form-control\" onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              name=\"name\"\n              placeholder=\"Name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"Manager\">Manager</label>\n            <input\n              name=\"manager\"\n              placeholder=\"Manager\"\n              value={this.state.manager}\n              onChange={this.handleChange}\n            />\n            <button>Create Fund</button>{\" \"}\n          </div>\n        </form>\n        <table className=\"table table-dark\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Inception Date</th>\n              <th>Manager ID</th>\n              <th>Manager Name</th>\n              <th>Manager Phone</th>\n              <th>Manager Mail</th>\n              <th>Manager DOB</th>\n            </tr>\n          </thead>\n          <tbody>{this.getFundList()}</tbody>\n        </table>\n      </Fragment>\n    );\n  }\n}\n\nexport default Funds;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", manager: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Form submitting logic, prevent default page refresh\n  handleSubmit(event) {\n    debugger;\n    const { name, manager } = this.state;\n    event.preventDefault();\n    alert(`\n      ____Your Details____\\n\n      Name : ${name}\n      Manager : ${manager}\n     \n    `);\n  }\n\n  // Method causes to store all the values of the\n  // input field in react state single method handle\n  // input changes of all the input field using ES6\n  // javascript feature computed property names\n  handleChange(event) {\n    this.setState({\n      // Computed property names\n      // keys of the objects are computed dynamically\n      [event.target.name]: event.target.value\n    });\n  }\n\n  // Return a controlled form i.e. values of the\n  // input field not stored in DOM values are exist\n  // in react component itself as state\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            name=\"name\"\n            placeholder=\"Name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"Manager\">Manager</label>\n          <input\n            name=\"manager\"\n            placeholder=\"Manager\"\n            value={this.state.manager}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div>\n          <button>Create Account</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Funds from \"./components/funds\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main className=\"container\">\n        <Funds />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}